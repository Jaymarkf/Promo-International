{"version":3,"sources":["webpack:///./assets/js/theme/brand.js"],"names":["Brand","context","validationDictionary","createTranslationDictionary","onReady","this","themeSettings","show_bulk_order_mode","useBulkOrder","bulkOrder","bulkOrderFactory","compareProducts","actionBarFactory","$","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","destroy","facetedSearch","off","onMinPriceError","price_min_evaluation","onMaxPriceError","price_max_evaluation","minPriceNotEntered","price_min_not_entered","maxPriceNotEntered","price_max_not_entered","onInvalidPrice","price_invalid_value","$productListingContainer","$facetedSearchContainer","requestOptions","template","productListing","sidebar","config","shop_by_brand","brand","products","limit","brandProductsPerPage","showMore","FacetedSearch","content","html","triggerHandler","reinit","animate","scrollTop","validationErrorMessages","CatalogPage"],"mappings":"uTAUqBA,E,oBACjB,WAAYC,GAAS,aACjB,cAAMA,IAAN,MACKC,qBAAuBC,YAA4BF,GAFvC,E,2GAKrBG,QAAA,WAEQC,KAAKJ,UAAYI,KAAKJ,QAAQK,cAAcC,sBAAwBF,KAAKJ,QAAQO,gBACjFH,KAAKI,UAAYC,YAAiBL,KAAKJ,UAK3CU,YAAgBN,KAAKJ,SAErBW,cACIC,EAAE,kBAAkBC,OAAS,EAC7BT,KAAKU,qBAELV,KAAKW,eAAiBX,KAAKW,eAAeC,KAAKZ,MAC/Ca,IAAMC,GAAG,mBAAoBd,KAAKW,kB,EAK1CI,QAAA,WACQf,KAAKgB,cACLhB,KAAKgB,cAAcD,UAEnBF,IAAMI,IAAI,mBAAoBjB,KAAKW,iB,EAI3CD,kBAAA,WAAoB,WAChB,EAMIV,KAAKH,qBALiBqB,EAD1B,EACIC,qBACsBC,EAF1B,EAEIC,qBACuBC,EAH3B,EAGIC,sBACuBC,EAJ3B,EAIIC,sBACqBC,EALzB,EAKIC,oBAEEC,EAA2BpB,EAAE,8BAC7BqB,EAA0BrB,EAAE,6BAE5BsB,EAAiB,CACnBC,SAAU,CACNC,eAAgB,wBAChBC,QAAS,iBAEbC,OAAQ,CACJC,eAAe,EACfC,MAAO,CACHC,SAAU,CACNC,MAVQtC,KAAKJ,QAAQ2C,wBAcjCC,SAAU,mBAGdxC,KAAKgB,cAAgB,IAAIyB,IAAcX,GAAgB,SAACY,GACpDd,EAAyBe,KAAKD,EAAQV,gBACtCH,EAAwBc,KAAKD,EAAQT,SAErCzB,EAAE,QAAQoC,eAAe,gBAGrB,EAAKxC,WACL,EAAKA,UAAUyC,SAGnBrC,EAAE,cAAcsC,QAAQ,CACpBC,UAAW,GACZ,OACJ,CACCC,wBAAyB,CACrB9B,kBACAE,kBACAE,qBACAE,qBACAE,qB,GAjFmBuB,M","file":"theme-bundle.chunk.19.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\n// Supermarket Mod\n// import compareProducts from './global/compare-products';\nimport compareProducts from '../emthemes-modez/compare-products';\nimport FacetedSearch from './common/faceted-search';\nimport { createTranslationDictionary } from '../theme/common/utils/translations-utils';\nimport actionBarFactory from '../emthemes-modez/action-bar'; // Papathemes - Supermarket\nimport bulkOrderFactory from '../emthemes-modez/bulk-order';\n\nexport default class Brand extends CatalogPage {\n    constructor(context) {\n        super(context);\n        this.validationDictionary = createTranslationDictionary(context);\n    }\n\n    onReady() {\n        // Papathemes - Bulk Order\n        if (this.context && (this.context.themeSettings.show_bulk_order_mode || this.context.useBulkOrder)) {\n            this.bulkOrder = bulkOrderFactory(this.context);\n        }\n\n        // Supermarket Mod\n        // compareProducts(this.context.urls);\n        compareProducts(this.context);\n\n        actionBarFactory(); // Papathemes - Supermarket\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n    }\n\n    // Supermarket\n    destroy() {\n        if (this.facetedSearch) {\n            this.facetedSearch.destroy();\n        } else {\n            hooks.off('sortBy-submitted', this.onSortBySubmit);\n        }\n    }\n\n    initFacetedSearch() {\n        const {\n            price_min_evaluation: onMinPriceError,\n            price_max_evaluation: onMaxPriceError,\n            price_min_not_entered: minPriceNotEntered,\n            price_max_not_entered: maxPriceNotEntered,\n            price_invalid_value: onInvalidPrice,\n        } = this.validationDictionary;\n        const $productListingContainer = $('#product-listing-container');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const productsPerPage = this.context.brandProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'brand/product-listing',\n                sidebar: 'brand/sidebar',\n            },\n            config: {\n                shop_by_brand: true,\n                brand: {\n                    products: {\n                        limit: productsPerPage,\n                    },\n                },\n            },\n            showMore: 'brand/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $productListingContainer.html(content.productListing);\n            $facetedSearchContainer.html(content.sidebar);\n\n            $('body').triggerHandler('compareReset');\n\n            // Papathemes - Bulk Order\n            if (this.bulkOrder) {\n                this.bulkOrder.reinit();\n            }\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        }, {\n            validationErrorMessages: {\n                onMinPriceError,\n                onMaxPriceError,\n                minPriceNotEntered,\n                maxPriceNotEntered,\n                onInvalidPrice,\n            },\n        });\n    }\n}\n"],"sourceRoot":""}